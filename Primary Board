{"slots":{"0":{"name":"container1","type":{"events":[],"methods":[]}},"1":{"name":"screen","type":{"events":[],"methods":[]}},"2":{"name":"DB1","type":{"events":[],"methods":[]}},"3":{"name":"DB2","type":{"events":[],"methods":[]}},"4":{"name":"container2","type":{"events":[],"methods":[]}},"5":{"name":"container3","type":{"events":[],"methods":[]}},"6":{"name":"container4","type":{"events":[],"methods":[]}},"7":{"name":"switch","type":{"events":[],"methods":[]}},"8":{"name":"container5","type":{"events":[],"methods":[]}},"9":{"name":"DB3","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"local getList = container1.getItemsList()\ncontainer1Qty = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"0"},"key":"0"},{"code":"local getList = container2.getItemsList()\ncontainer2Qty = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"4"},"key":"1"},{"code":"local getList = container3.getItemsList()\ncontainer3Qty = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"5"},"key":"2"},{"code":"local getList = container4.getItemsList()\ncontainer4Qty = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"6"},"key":"3"},{"code":"local getList = container5.getItemsList()\ncontainer5Qty = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"8"},"key":"4"},{"code":"switch.deactivate()","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"5"},{"code":"switch.activate()\nunit.setTimer(\"Live\",60)\n\n-- DEBUG: Purge everything\n-- DB1.clear()\n-- DB2.clear()\n-- DB3.clear()\n-- screen.setHTML(\"\")\n\ncontainer1Qty = DB1.getIntValue(\"container1Qty\") -- Get quantity from last runtime\ncontainer2Qty = DB1.getIntValue(\"container2Qty\")  \ncontainer3Qty = DB1.getIntValue(\"container3Qty\")  \ncontainer4Qty = DB1.getIntValue(\"container4Qty\")  \ncontainer5Qty = DB1.getIntValue(\"container5Qty\")\n\nfunction getCount(list)\n     count = 0\n\tlocal find = string.find(list, \"SingleUseBlueprint\")\n     if find == nil then \n     \treturn 0;\n     else\n        \n\t\tXstart = find + 60\n\t\tXend = find + 67\n\t\tlocal gotcha = string.sub(list, Xstart, Xend)\n\t\tcount = string.match(gotcha, \"%d+\")\n\t\treturn count;\n     end\nend\n\nfunction has_value (tab, val)\n    for index, value in ipairs(tab) do\n        if value == val then\n            return true\n        end\n    end\n\n    return false\nend\n\nfunction update_clock(n)\n  \n  -- n to d,h,m,s  \n  local day = math.floor(n / (24*3600))\n  n = n % (24 * 3600)\n  local hour = math.floor(n / 3600)\n  n = n % 3600\n  minutes = math.floor(n / 60)\n  n = n % 60\n  local seconds = math.floor(n)\n  \n  -- h,m,s to text   \n  hour_text = tostring(hour)    \n  if string.len(hour_text) <2 then   hour_text = \"0\"..hour_text end\n  \n  minutes_text = tostring(minutes)    \n  if string.len(minutes_text) <2 then   minutes_text = \"0\"..minutes_text end  \n    \n  -- Update system time str  \n  timeText = hour_text .. \":\" .. minutes_text  \n\nend\n\n-- Update system time\nupdate_clock(system.getTime())\n\n\n\n\n\n\n\n\n","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"6"},{"code":"-- Functions\nfunction containerStatus(percent, nan)\n    if nan == 0 then return \"N/A\"    \n    elseif percent <= 25 then return \"ATTN\"\n    elseif percent > 25 and percent < 50 then return \"LOW\"\n    else return \"GOOD\"\n    end\nend\n\n-- Global Variables\nlocal title = \"STORE INVENTORY\" --export\nlocal showSafetyStock = true --export\nlocal criticalColor = \"red\" --export\nlocal lowColor = \"yellow\" --export\nlocal goodColor = \"green\" --export\nlocal nanColor = \"gray\" --export\n\n-- Update system time\nupdate_clock(system.getTime())\n\n-- DEBUG\n-- system.print(\"Time:\"..timeText)\n-- system.print(\"Min10:\"..minute10)\n-- system.print(\"Min1:\"..minute1)\n\nlastBatch1ATime = DB1.getStringValue(\"lastBatch1ATime\")\n\n-- DB Variables: If you need to use less than 3 Secondary boards, you need to turn off each\n--               db in parameters\nlocal db1Enabled = true --export\nif db1Enabled == true then\n\tsb1html = DB1.getStringValue(SB1)\nelse\n     sb1html = [[]]\nend\n\nlocal db2Enabled = true --export\nif db2Enabled == true then\n\tsb2html = DB2.getStringValue(SB2)\nelse\n\tsb2html = [[]]\nend\n\nlocal db3Enabled = true --export\nif db3Enabled == true then\n\tsb3html = DB3.getStringValue(SB3)\nelse\n\tsb3html = [[]]\nend\n\n-- Parse time and update nextBatch in all DBs every ~5 mins\n\nbatch1Times = { 0, 18, 36 }\nbatch2Times = { 6, 24, 42 }\nbatch3Times = { 12, 30, 48 }\n\n-- START batch sequence\n-- batch 1: update 1-5 on here\n\n-- batch 1:  update 6-10 in board 2\n-- batch 2:  update 11-14 in board 2\n\n-- batch 2: update 15-20 in board 3\n-- batch 3: update 21-23 in board 3\n\n-- batch 3: update 24-28 in board 4\n\nif has_value(batch1Times, minutes) == true then \n\n     system.print(\"Starting batch 1A @ minute \" .. minutes) \n    \n     DB1.setStringValue(\"lastBatch1ATime\", timeText)\n     lastBatch1ATime = timeText \n\n\tlocal container1List = container1.acquireStorage()\n\tlocal container2List = container2.acquireStorage()\n\tlocal container3List = container3.acquireStorage()\n\tlocal container4List = container4.acquireStorage()    \n\tlocal container5List = container5.acquireStorage()\n    \n     system.print(\"Batch 1A done\")\n    \nend\n-- END batch sequence, HTML will still update every minute even w/ no new acquires\n\n-- Container 1 Variables\nlocal container1Enabled = true --export\nlocal container1Label = \"Roulette Table\" --export\nlocal container1Density = 0 --export\nif container1Enabled == true then\n   \tcontainer1SafetyStock = 5 --export\n   \tcontainer1Percent = (( container1Qty/container1SafetyStock ) * 100 )\n   \tcontainer1Status = containerStatus(container1Percent, container1SafetyStock)\n   \tif showSafetyStock == true then\n       \tcontainer1QtyFull = container1Qty .. \"/\" .. container1SafetyStock\n   \telse\n       \tcontainer1QtyFull = container1Qty\n   \tend\n\tcontainer1HTML = [[\n       \t<tr>\n       \t<td>]]..container1Label..[[</td>\n       \t<td>]]..container1QtyFull..[[</td>\n       \t<td class=\"]]..container1Status..[[\">]]..container1Status..[[</td>\n    \t<td>]]..lastBatch1ATime..[[</td>\n       \t</tr>  \n   \t]]\nelse \n   \tcontainer1HTML = [[]]\nend\t\n-- Container 2 Variables\nlocal container2Enabled = true --export\nlocal container2Label = \"Furniture Pack\" --export\nlocal container2Density = 0 --export\nif container2Enabled == true then\n   \tcontainer2SafetyStock = 20 --export\n   \tcontainer2Percent = (( container2Qty/container2SafetyStock ) * 100 )\n   \tcontainer2Status = containerStatus(container2Percent, container2SafetyStock) \n   \tif showSafetyStock == true then\n       \tcontainer2QtyFull = container2Qty .. \"/\" .. container2SafetyStock\n   \telse\n       \tcontainer2QtyFull = container2Qty\n   \tend\n   \tcontainer2HTML = [[\n       \t<tr>\n         \t<td>]]..container2Label..[[</td>\n         \t<td>]]..container2QtyFull..[[</td>\n         \t<td class=\"]]..container2Status..[[\">]]..container2Status..[[</td>\n    \t    <td>]]..lastBatch1ATime..[[</td>\n       \t</tr>\n    \t]]\nelse\n   \tcontainer2HTML = [[]]\nend\n-- Container 3 Variables\nlocal container3Enabled = true --export\nlocal container3Label = \"Parquet Lot 1\" --export\nlocal container3Density = 0 --export\nif container3Enabled == true then\n   \tcontainer3SafetyStock = 20 --export\n   \tcontainer3Percent = (( container3Qty/container3SafetyStock ) * 100 )\n   \tcontainer3Status = containerStatus(container3Percent, container3SafetyStock)\n   \tif showSafetyStock == true then\n       \tcontainer3QtyFull = container3Qty .. \"/\" .. container3SafetyStock\n   \telse\n       \tcontainer3QtyFull = container3Qty\n   \tend\n   \tcontainer3HTML = [[\n       \t<tr>\n         \t<td>]]..container3Label..[[</td>\n         \t<td>]]..container3QtyFull..[[</td>\n         \t<td class=\"]]..container3Status..[[\">]]..container3Status..[[</td>\n             <td>]]..lastBatch1ATime..[[</td>\n       \t</tr>\n   \t]]\nelse\n   \tcontainer3HTML = [[]]\nend\n\nlocal container4Enabled = true --export\nlocal container4Label = \"Parquet Lot 2\" --export\nlocal container4Density = 0 --export\nif container4Enabled == true then\n   \tcontainer4SafetyStock = 20 --export\n   \tcontainer4Percent = (( container4Qty/container4SafetyStock ) * 100 )\n   \tcontainer4Status = containerStatus(container4Percent, container4SafetyStock)\n   \tif showSafetyStock == true then\n       \tcontainer4QtyFull = container4Qty .. \"/\" .. container4SafetyStock\n   \telse\n       \tcontainer4QtyFull = container4Qty\n   \tend\n   \tcontainer4HTML = [[\n       \t<tr>\n         \t<td>]]..container4Label..[[</td>\n         \t<td>]]..container4QtyFull..[[</td>\n         \t<td class=\"]]..container4Status..[[\">]]..container4Status..[[</td>\n             <td>]]..lastBatch1ATime..[[</td>\n       \t</tr>\n   \t]]\nelse\n   \tcontainer4HTML = [[]]\nend\n\nlocal container5Enabled = true --export\nlocal container5Label = \"Parquet Lot 3\" --export\nlocal container5Density = 0 --export\nif container5Enabled == true then\n   \tcontainer5SafetyStock = 20 --export\n   \tcontainer5Percent = (( container5Qty/container5SafetyStock ) * 100 )\n   \tcontainer5Status = containerStatus(container5Percent, container5SafetyStock)\n   \tif showSafetyStock == true then\n       \tcontainer5QtyFull = container5Qty .. \"/\" .. container5SafetyStock\n   \telse\n       \tcontainer5QtyFull = container5Qty\n   \tend\n   \tcontainer5HTML = [[\n       \t<tr>\n         \t<td>]]..container5Label..[[</td>\n         \t<td>]]..container5QtyFull..[[</td>\n         \t<td class=\"]]..container5Status..[[\">]]..container5Status..[[</td>\n             <td>]]..lastBatch1ATime..[[</td>\n       \t</tr>\n   \t]]\nelse\n   \tcontainer5HTML = [[]]\nend\n    \nhtml = [[\n\n<div style=\"margin-left:1vw; margin-top: 0.5vw; margin-bottom: -0.5vw; width=100vw;\">\n<h1 style=\"font-size: 2vw; text-align: center; line-height: 2vw;\">]]\n..title..[[</h1>\n<div style=\"margin-top: 0px; padding: -1vw; width: 96vw; display: inline-block;\"> \n<style>\n.row {\n  margin-left:5px;\n  margin-right:5px;\n  line-height: 1.5vw;\n}  \n.column {\n  float: left;\n  width: 50%;\n  padding: 1vw;\n  background-color: dark gray;  \n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: 100%;\n  border: 1px solid white;\n  margin-left: 1vw;\n  margin-top: -0.5vw;\n}\ntr{\n  border: 1px solid white;\t\n}\nth {  \n  opacity: 0.8;\n  color: black;\n  text-align: center;\n  padding: 0.2vw;\n  font-size: 2vw;\n  background-color: white; \n}\ntd {\n  text-align: center;\n  padding: 0.6vw;\n  font-size: 2.1vw;\n}\ntr:nth-child(even) {\n  background-color: #202020;  \n}\ntr:nth-child(odd) {\n  background-color: #000000;  \n}\n.ATTN{\n  color: ]]..criticalColor..[[;\n}\n.LOW{\n  color: ]]..lowColor..[[;\n}\n.GOOD{\n  color: ]]..goodColor..[[;\n}\n\n.N/A{\n  color: ]]..nanColor..[[;\n}\n</style> \n\n<div class=\"row\">\n  <div class=\"column\">\n      <table>\n        <tr>  \n          <th>NAME</th>\n          <th>QTY</th>\n          <th>LVL</th>\n          <th>AS @</th>\n        </tr>\n        ]]..container1HTML..[[\n        ]]..container2HTML..[[\n        ]]..container3HTML..[[\n        ]]..container4HTML..[[\n        ]]..container5HTML..[[        \n  \t   ]]..sb1html..[[\n\t   \n      </table>      \n  </div>\n<div class=\"column\">\n      <table>\n        <tr>  \n          <th>NAME</th>\n          <th>QTY</th>\n          <th>LVL</th>\n          <th>AS @</th>\n        </tr>        \n  \t   ]]..sb2html..[[\n\t   ]]..sb3html..[[\n      </table>      \n  </div>\n<div>\n<div class=\"column\" style=\"margin-top: 0vw; padding: 0.5vw;width: 49vw;display: inline-block;\"> \n\t<p style=\"font-size:1.5vw; padding: 0.5vw; text-align:center;\">Inventory batch updates based on system time.</p>\n\t<p style=\"font-size:1.5vw; padding: 0.5vw; text-align:center;\">Minute count for each update displayed on the right.</p>\n\t<p style=\"font-size:2.5vw; padding: 1vw; text-align:center;\">(Current System Time - ]]..timeText..[[)</p>\n</div>  \n<div class=\"column\" style=\"margin-left: 2vw; margin-top: 0vw; padding: -0.5vw; width: 42vw; display: inline-block;\"> \n      <table style=\"float:right;\">\n         <tr style=\"line-height: 1.5vw;\">\n         \t<th>BATCH</th>\n         \t<th>SLOTS</th>\n             <th colspan = \"3\">MINUTE</th>\n         </tr>\n         <tr>\n         \t<td>1</td>\n         \t<td>1-10</td>\n         \t<td>0</td>\n         \t<td>18</td>\n             <td>36</td>\n       \t</tr>\n         <tr>\n         \t<td>2</td>\n         \t<td>11-20</td>\n         \t<td>6</td>\n         \t<td>24</td>\n             <td>42</td>\n       \t</tr>\n         <tr>\n         \t<td>3</td>\n         \t<td>21-25</td>\n         \t<td>12</td>\n         \t<td>30</td>\n             <td>48</td>\n       \t</tr>\n      </table>\n</div>\n</div>\n</div>\n</div>\n]]\n\nscreen.setHTML(html)\nDB1.setIntValue(\"container1Qty\", container1Qty) -- Save quantity for next reload\nDB1.setIntValue(\"container2Qty\", container2Qty)  \nDB1.setIntValue(\"container3Qty\", container3Qty)  \nDB1.setIntValue(\"container4Qty\", container4Qty)  \nDB1.setIntValue(\"container5Qty\", container5Qty)    ","filter":{"args":[{"value":"Live"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"7"}],"methods":[],"events":[]}
