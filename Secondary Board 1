{"slots":{"0":{"name":"DB1","type":{"events":[],"methods":[]}},"1":{"name":"container1","type":{"events":[],"methods":[]}},"2":{"name":"container2","type":{"events":[],"methods":[]}},"3":{"name":"container3","type":{"events":[],"methods":[]}},"4":{"name":"container4","type":{"events":[],"methods":[]}},"5":{"name":"container5","type":{"events":[],"methods":[]}},"6":{"name":"container6","type":{"events":[],"methods":[]}},"7":{"name":"container7","type":{"events":[],"methods":[]}},"8":{"name":"container8","type":{"events":[],"methods":[]}},"9":{"name":"container9","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"local getList = container1.getItemsList()\ncontainer1Qty2 = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"1"},"key":"0"},{"code":"local getList = container2.getItemsList()\ncontainer2Qty2 = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"2"},"key":"1"},{"code":"local getList = container3.getItemsList()\ncontainer3Qty2 = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"3"},"key":"2"},{"code":"local getList = container4.getItemsList()\ncontainer4Qty2 = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"4"},"key":"3"},{"code":"local getList = container5.getItemsList()\ncontainer5Qty2 = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"5"},"key":"4"},{"code":"local getList = container6.getItemsList()\ncontainer6Qty2 = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"6"},"key":"5"},{"code":"local getList = container7.getItemsList()\ncontainer7Qty2 = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"7"},"key":"6"},{"code":"local getList = container8.getItemsList()\ncontainer8Qty2 = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"8"},"key":"7"},{"code":"local getList = container9.getItemsList()\ncontainer9Qty2 = getCount(getList)","filter":{"args":[],"signature":"storageAcquired()","slotKey":"9"},"key":"8"},{"code":"-- Functions\nfunction containerStatus(percent, nan)\n    if nan == 0 then return \"N/A\"    \n    elseif percent <= 25 then return \"ATTN\"\n    elseif percent > 25 and percent < 50 then return \"LOW\"\n    else return \"GOOD\"\n    end\nend\n\n-- Global Variables\nlocal showSafetyStock = true --export\n\n-- Update system time\nupdate_clock(system.getTime())\n\nsystem.print(\"Board 2 mins:\"..minutes_text)\n\nlastBatch1BTime = DB1.getStringValue(\"lastBatch1BTime\")\nlastBatch2ATime = DB1.getStringValue(\"lastBatch2ATime\")\n\n-- START batch sequence\n-- batch 1: update 1-5 on board 1\n\n-- batch 1:  update 6-10 here\n-- batch 2:  update 11-14 here\n\n-- batch 2: update 15-20 in board 3\n-- batch 3: update 21-23 in board 3\n\n-- batch 3: update 24-28 in board 4\n\nbatch1Times = { 0, 18, 36 }\nbatch2Times = { 6, 24, 42 }\n\nif has_value(batch1Times, minutes) == true then \n\n     system.print(\"Finish batch 1 @ min \"..minutes_text)\n    \n     DB1.setStringValue(\"lastBatch1BTime\", timeText)\n     lastBatch1BTime = timeText\n\n\tlocal container1List = container1.acquireStorage()\n\tlocal container2List = container2.acquireStorage()\n\tlocal container3List = container3.acquireStorage()\n\tlocal container4List = container4.acquireStorage()\n     local container5List = container5.acquireStorage()\n\n\tsystem.print(\"Batch 1B done\")   \n    \nelseif has_value(batch2Times, minutes) == true then \n\n     system.print(\"Start batch 2A @ minute \"..minutes)\n    \n     DB1.setStringValue(\"lastBatch2ATime\", timeText)\n     lastBatch2ATime = timeText \n\n\tlocal container6List = container6.acquireStorage()\n\tlocal container7List = container7.acquireStorage()\n\tlocal container8List = container8.acquireStorage()  \n\tlocal container9List = container9.acquireStorage()\n    \n     system.print(\"Batch 2A done\") \n\nend\n-- END batch sequence, HTML will still update every minute even w/ no new acquires\n\n-- Container 1 Variables\nlocal container1Enabled = true --export\nlocal container1Label = \"Parquet Lot 4\" --export\nlocal container1Density = 0 --export\nif container1Enabled == true then        \n     container1SafetyStock = 20 --export\n     container1Percent = (( container1Qty2/container1SafetyStock ) * 100 )\n     container1Status = containerStatus(container1Percent, container1SafetyStock)\n\tif showSafetyStock == true then\n        container1QtyFull = container1Qty2 .. \"/\" .. container1SafetyStock\n     else\n        container1QtyFull = container1Qty2\n     end\n\tcontainer1HTML = [[\n        <tr>\n          <td>]]..container1Label..[[</td>\n          <td>]]..container1QtyFull..[[</td>\n          <td class=\"]]..container1Status..[[\">]]..container1Status..[[</td>\n          <td>]]..lastBatch1BTime..[[</td>\n        </tr>  \n    ]]\nelse \n     container1HTML = [[]]\nend\t\n-- Container 2 Variables\nlocal container2Enabled = true --export\nlocal container2Label = \"Parquet Lot 5\" --export\nlocal container2Density = 0 --export\nif container2Enabled == true then   \n    container2SafetyStock = 20 --export\n    container2Percent = (( container2Qty2/container2SafetyStock ) * 100 )\n    container2Status = containerStatus(container2Percent, container2SafetyStock)    \n    if showSafetyStock == true then\n        container2QtyFull = container2Qty2 .. \"/\" .. container2SafetyStock\n    else\n        container2QtyFull = container2Qty2\n    end\n    container2HTML = [[\n        <tr>\n          <td>]]..container2Label..[[</td>\n          <td>]]..container2QtyFull..[[</td>\n          <td class=\"]]..container2Status..[[\">]]..container2Status..[[</td>\n          <td>]]..lastBatch1BTime..[[</td>\n        </tr>\n    ]]\nelse\n    container2HTML = [[]]\nend\n\nlocal container3Enabled = true --export\nlocal container3Label = \"Spare 1\" --export\nlocal container3Density = 0 --export\nif container3Enabled == true then\n    container3SafetyStock = 0 --export\n    container3Percent = (( container3Qty2/container3SafetyStock ) * 100 )\n    container3Status = containerStatus(container3Percent, container3SafetyStock)    \n    if showSafetyStock == true then\n        container3QtyFull = container3Qty2 .. \"/\" .. container3SafetyStock\n    else\n        container3QtyFull = container3Qty2\n    end\n    container3HTML = [[\n        <tr>\n          <td>]]..container3Label..[[</td>\n          <td>]]..container3QtyFull..[[</td>\n          <td class=\"]]..container3Status..[[\">]]..container3Status..[[</td>\n          <td>]]..lastBatch1BTime..[[</td>\n        </tr>\n    ]]\nelse\n    container3HTML = [[]]\nend\n\nlocal container4Enabled = true --export\nlocal container4Label = \"Staircase\" --export\nlocal container4Density = 0 --export\nif container4Enabled == true then\n    container4SafetyStock = 10 --export\n    container4Percent = (( container4Qty2/container4SafetyStock ) * 100 )\n    container4Status = containerStatus(container4Percent, container4SafetyStock)\n    if showSafetyStock == true then\n        container4QtyFull = container4Qty2 .. \"/\" .. container4SafetyStock\n    else\n        container4QtyFull = container4Qty2\n    end\n    container4HTML = [[\n        <tr>\n          <td>]]..container4Label..[[</td>\n          <td>]]..container4QtyFull..[[</td>\n          <td class=\"]]..container4Status..[[\">]]..container4Status..[[</td>\n          <td>]]..lastBatch1BTime..[[</td>\n        </tr>\n    ]]\nelse\n    container4HTML = [[]]\nend\n\nlocal container5Enabled = true --export\nlocal container5Label = \"Chandelier\" --export\nlocal container5Density = 0 --export\nif container5Enabled == true then\n    container5SafetyStock = 10 --export\n    container5Percent = (( container5Qty2/container5SafetyStock ) * 100 )\n    container5Status = containerStatus(container5Percent, container5SafetyStock)\n    if showSafetyStock == true then\n        container5QtyFull = container5Qty2 .. \"/\" .. container5SafetyStock\n    else\n        container5QtyFull = container5Qty2\n    end\n    container5HTML = [[\n        <tr>\n          <td>]]..container5Label..[[</td>\n          <td>]]..container5QtyFull..[[</td>\n          <td class=\"]]..container5Status..[[\">]]..container5Status..[[</td>\n          <td>]]..lastBatch1BTime..[[</td>\n        </tr>\n    ]]\nelse\n    container5HTML = [[]]\nend\n\nlocal container6Enabled = true --export\nlocal container6Label = \"Spare 2\" --export\nlocal container6Density = 0 --export\nif container6Enabled == true then\n    container6SafetyStock = 0 --export\n    container6Percent = (( container6Qty2/container6SafetyStock ) * 100)\n    container6Status = containerStatus(container6Percent, container6SafetyStock)\n    if showSafetyStock == true then\n        container6QtyFull = container6Qty2 .. \"/\" .. container6SafetyStock\n    else\n        container6QtyFull = container6Qty2\n    end\n    container6HTML = [[\n        <tr>\n          <td>]]..container6Label..[[</td>\n          <td>]]..container6QtyFull..[[</td>\n          <td class=\"]]..container6Status..[[\">]]..container6Status..[[</td>\n          <td>]]..lastBatch2ATime..[[</td>\n        </tr>\n    ]]\t\nelse\n    container6HTML = [[]]\nend\n\nlocal container7Enabled = true --export\nlocal container7Label = \"Death Star\" --export\nlocal container7Density = 0 --export\nif container7Enabled == true then\n    container7SafetyStock = 5 --export\n    container7Percent = (( container7Qty2/container7SafetyStock ) * 100)\n    container7Status = containerStatus(container7Percent, container7SafetyStock)\n    if showSafetyStock == true then\n        container7QtyFull = container7Qty2 .. \"/\" .. container7SafetyStock\n    else\n        container7QtyFull = container7Qty2\n    end\n    container7HTML = [[\n        <tr>\n          <td>]]..container7Label..[[</td>\n          <td>]]..container7QtyFull..[[</td>\n          <td class=\"]]..container7Status..[[\">]]..container7Status..[[</td>\n          <td>]]..lastBatch2ATime..[[</td>    \n        </tr>\n    ]]\t\nelse\n    container7HTML = [[]]\nend\n\nlocal container8Enabled = true --export\nlocal container8Label = \"Emperor Window\" --export\nlocal container8Density = 0 --export\nif container8Enabled == true then\n    container8SafetyStock = 20 --export\n    container8Percent = (( container8Qty2/container8SafetyStock ) * 100)\n    container8Status = containerStatus(container8Percent, container8SafetyStock)\n    if showSafetyStock == true then\n        container8QtyFull = container8Qty2 .. \"/\" .. container8SafetyStock\n    else\n        container8QtyFull = container8Qty2\n    end\n    container8HTML = [[\n        <tr>\n          <td>]]..container8Label..[[</td>\n          <td>]]..container8QtyFull..[[</td>\n          <td class=\"]]..container8Status..[[\">]]..container8Status..[[</td>\n          <td>]]..lastBatch2ATime..[[</td>\n        </tr>\n    ]]\t\nelse\n    container8HTML = [[]]\nend\n\nlocal container9Enabled = true --export\nlocal container9Label = \"Emperors Throne\" --export\nlocal container9Density = 0 --export\nif container9Enabled == true then\n    container9SafetyStock = 20 --export\n    container9Percent = (( container9Qty2/container9SafetyStock ) * 100)\n    container9Status = containerStatus(container9Percent, container9SafetyStock)\n    if showSafetyStock == true then\n        container9QtyFull = container9Qty2 .. \"/\" .. container9SafetyStock\n    else\n        container9QtyFull = container9Qty2\n    end\n    container9HTML = [[\n        <tr>\n          <td>]]..container9Label..[[</td>\n          <td>]]..container9QtyFull..[[</td>\n          <td class=\"]]..container9Status..[[\">]]..container9Status..[[</td>\n          <td>]]..lastBatch2ATime..[[</td>\n        </tr>\n    ]]\t\nelse\n    container9HTML = [[]]\nend\n\nhtml = [[\n\n        ]]..container1HTML..[[\n        ]]..container2HTML..[[\n        ]]..container3HTML..[[\n        ]]..container4HTML..[[\n        ]]..container5HTML..[[\n        ]]..container6HTML..[[\n        ]]..container7HTML..[[\n        ]]..container8HTML..[[\n        ]]..container9HTML..[[\n      \n]]\n\nDB1.setStringValue(SB1,html)\nDB1.setIntValue(\"container1Qty2\", container1Qty2) -- Save quantity for next reload\nDB1.setIntValue(\"container2Qty2\", container2Qty2)  \nDB1.setIntValue(\"container3Qty2\", container3Qty2)  \nDB1.setIntValue(\"container4Qty2\", container4Qty2)  \nDB1.setIntValue(\"container5Qty2\", container5Qty2)    \nDB1.setIntValue(\"container6Qty2\", container6Qty2)  \nDB1.setIntValue(\"container7Qty2\", container7Qty2)  \nDB1.setIntValue(\"container8Qty2\", container8Qty2)  \nDB1.setIntValue(\"container9Qty2\", container9Qty2)   ","filter":{"args":[{"value":"Live"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"9"},{"code":"unit.setTimer(\"Live\",60)\ncontainer1Qty2 = DB1.getIntValue(\"container1Qty2\") -- Get quanity from last runtime\ncontainer2Qty2 = DB1.getIntValue(\"container2Qty2\")  \ncontainer3Qty2 = DB1.getIntValue(\"container3Qty2\")  \ncontainer4Qty2 = DB1.getIntValue(\"container4Qty2\")  \ncontainer5Qty2 = DB1.getIntValue(\"container5Qty2\")\ncontainer6Qty2 = DB1.getIntValue(\"container6Qty2\")  \ncontainer7Qty2 = DB1.getIntValue(\"container7Qty2\")  \ncontainer8Qty2 = DB1.getIntValue(\"container8Qty2\")  \ncontainer9Qty2 = DB1.getIntValue(\"container9Qty2\")\n\nfunction getCount(list)\n     count = 0\n\tlocal find = string.find(list, \"SingleUseBlueprint\")\n     if find == nil then \n     \treturn 0;\n     else\n        \n\t    Xstart = find + 60\n\t    Xend = find + 67\n\t    local gotcha = string.sub(list, Xstart, Xend)\n\t    count = string.match(gotcha, \"%d+\")\n\t    return count;\n     end\nend\n\nfunction has_value (tab, val)\n    for index, value in ipairs(tab) do\n        if value == val then\n            return true\n        end\n    end\n\n    return false\nend\n\nfunction update_clock(n)\n  \n  -- n to d,h,m,s  \n  local day = math.floor(n / (24*3600))\n  n = n % (24 * 3600)\n  local hour = math.floor(n / 3600)\n  n = n % 3600\n  minutes = math.floor(n / 60)\n  n = n % 60\n  local seconds = math.floor(n)\n  \n  -- h,m,s to text   \n  hour_text = tostring(hour)    \n  if string.len(hour_text) <2 then   hour_text = \"0\"..hour_text end\n  \n  minutes_text = tostring(minutes)    \n  if string.len(minutes_text) <2 then   minutes_text = \"0\"..minutes_text end  \n    \n  -- Update system time str  \n  timeText = hour_text .. \":\" .. minutes_text  \n    \n  -- Update minute counters\n  minute10 = tonumber(minutes_text:sub(1, 1))\n  minute1 = tonumber(minutes_text:sub(2, 2))\n\nend\n\n-- Update system time\nupdate_clock(system.getTime())\n\n\n\n\n","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"10"}],"methods":[],"events":[]}
